SET(TARGET_NAME mat_mul_plugin)
SET(SHARED_TARGET ${TARGET_NAME})
SET(STATIC_TARGET ${TARGET_NAME}_static)

SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS}" --compiler-options -fPIC)
#MESSAGE(STATUS "CUDA_NVCC_FLAGS: ${CUDA_NVCC_FLAGS}")

FILE(GLOB_RECURSE GROUP_NORM_PLUGIN_HEADS *.h *.hpp *.cuh)
FILE(GLOB GROUP_NORM_PLUGIN_SRCS *.cpp *.cc *.cu)
#MESSAGE(STATUS "GROUP_NORM_PLUGIN_HEADS: ${GROUP_NORM_PLUGIN_HEADS}")
#MESSAGE(STATUS "GROUP_NORM_PLUGIN_SRCS: ${GROUP_NORM_PLUGIN_SRCS}")

SOURCE_GROUP("Include" FILES ${GROUP_NORM_PLUGIN_HEADS})
SOURCE_GROUP("Source" FILES ${GROUP_NORM_PLUGIN_SRCS})

CUDA_ADD_LIBRARY(${STATIC_TARGET} STATIC ${GROUP_NORM_PLUGIN_SRCS} ${GROUP_NORM_PLUGIN_HEADS})
TARGET_LINK_LIBRARIES(${STATIC_TARGET} ${CUDA_LIBRARIES} ${TENSORRT_LIBRARY} ${CUDA_CUBLAS_LIBRARIES}
        ${CUDA_CUBLASLT_LIBRARIES})
TARGET_INCLUDE_DIRECTORIES(${STATIC_TARGET} PUBLIC
        ${CMAKE_SOURCE_DIR}/src/plugins
        ${CUDA_INCLUDE_DIRS}
        )
SET_TARGET_PROPERTIES(${STATIC_TARGET} PROPERTIES CUDA_SEPARABLE_COMPILATION ON)

IF (CMAKE_VERSION VERSION_GREATER_EQUAL 3.18)
    SET_PROPERTY(TARGET ${STATIC_TARGET} PROPERTY CUDA_ARCHITECTURES ${GPU_ARCHS})
ENDIF ()